# Generated by Django 4.1.5 on 2024-01-31 09:56

import backend.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "company",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Компания"
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Должность"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="active"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("shop", "Магазин"), ("buyer", "Покупатель")],
                        default="buyer",
                        max_length=5,
                        verbose_name="Тип пользователя",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", backend.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Название")),
            ],
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("city", models.CharField(max_length=50, verbose_name="Город")),
                ("street", models.CharField(max_length=50, verbose_name="Улица")),
                (
                    "house",
                    models.CharField(blank=True, max_length=50, verbose_name="Дом"),
                ),
                (
                    "structure",
                    models.CharField(blank=True, max_length=50, verbose_name="Корпус"),
                ),
                (
                    "building",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Строение"
                    ),
                ),
                (
                    "apartment",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Квартира"
                    ),
                ),
                ("phone", models.CharField(max_length=50, verbose_name="Телефон")),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("cart", "Корзина"),
                            ("new", "Новый"),
                            ("confirmed", "Подтвержден"),
                            ("assembled", "Собран"),
                            ("sent", "Отправлен"),
                            ("delivered", "Доставлен"),
                            ("canceled", "Отменен"),
                        ],
                        default="cart",
                        max_length=50,
                        verbose_name="Статус",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="backend.contact",
                        verbose_name="Контакт",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shopAPI",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Parameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Название")),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Название")),
                (
                    "model",
                    models.CharField(blank=True, max_length=80, verbose_name="Модель"),
                ),
                ("external_id", models.PositiveIntegerField(verbose_name="Внешний ИД")),
                ("quantity", models.PositiveIntegerField(verbose_name="Количество")),
                ("price", models.PositiveIntegerField(verbose_name="Цена")),
                (
                    "price_rrc",
                    models.PositiveIntegerField(
                        verbose_name="Рекомендуемая розничная цена"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="backend.category",
                        verbose_name="Категория",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Shop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Название")),
                (
                    "url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Ссылка на файл прайса"
                    ),
                ),
                (
                    "state",
                    models.BooleanField(
                        default=True, verbose_name="Cтатус получения заказов"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductParameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=100, verbose_name="Значение")),
                (
                    "parameter",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parameter",
                        to="backend.parameter",
                        verbose_name="Параметр",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_parameters",
                        to="backend.product",
                        verbose_name="Информация о продукте",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="product",
            name="shop",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products_info",
                to="backend.shop",
                verbose_name="Магазин",
            ),
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "product_name",
                    models.CharField(max_length=50, verbose_name="Название товара"),
                ),
                ("external_id", models.PositiveIntegerField(verbose_name="Внешний ИД")),
                (
                    "quantity",
                    models.PositiveIntegerField(default=1, verbose_name="Количество"),
                ),
                ("price", models.PositiveIntegerField(default=0, verbose_name="Цена")),
                (
                    "total_amount",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Общая стоимость"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="backend.category",
                        verbose_name="Категория товара",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ordered_items",
                        to="backend.order",
                        verbose_name="Заказ",
                    ),
                ),
                (
                    "shop",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="backend.shop",
                        verbose_name="магазин",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConfirmEmailToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата выдачи токена."
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        db_index=True, max_length=100, unique=True, verbose_name="Ключ"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="confirm_email_tokens",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Связанный пользователь",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="category",
            name="shops",
            field=models.ManyToManyField(
                blank=True,
                related_name="categories",
                to="backend.shop",
                verbose_name="Магазины",
            ),
        ),
    ]
